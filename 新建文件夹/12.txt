异常

    1、异常：
        Java语言中，将程序执行中发生的不正常情况称为 “异常”。（开发过程中的语法
        错误和逻辑错误不是异常）

        执行过程中所发生的异常事件可分为两大类
        1）Error(错误)：Java虚拟机无法解决的严重问题。如：JVM系统内部错误、资源耗尽等严重情況。
           比如：StackOverflowError[栈溢出]和OOM(out of memory)，Error 是严重错误，程序会崩溃。
        2）Exception：其它因编程错误或偶然的外在因素导致的一般性问题，可以使用针对性的代码进行处理。
           例如空指针访问，试图读取不存在的文件，网络连接中断等等，
            （1）编译时异常
            （2）运行时异常
                 五大经典 运行时异常
                 NullPointerException 空指针异常
                 ArrayIndexOutOfBoundsException 数组下标越界异常
                 ClassCastException  类型转换异常
                 NumberFormatException 数字格式不正确异常
                 ArithmeticException 算数异常

    2、异常处理：但异常发生时，对异常处理的方式

      异常处理的方式
        1）try-catch-finally
         程序员在代码中捕获发生的异常，自行处理

        2）throws
           将发生的异常抛出，交给调用者(方法)来处理，最顶级的处理者就是JVM

      try-catch方式处理异常说明

        1）Java提供try和catch块来处理异常。try块用于包含可能出错的代码。catch块用
            于处理try块中发生的异常。可以根据需要在程序中有多个try...catch块。

        2）如果异常发生了，则异常发生后面的代码不会执行，直接进入到catch块
        3）如果异常没有发生，则顺序执行try的代码块，不会进入到catch.
        4）如果希望不管是否发生异常，都执行某段代码(比如关闭连接，释放资源等）
           则使用如下代码 finally{}

        2)基本语法
            try{
                //可疑代码
                //将异常生成对应的异常对象，传递给catch块
            }catch(异常）{
                //对异常的处理
            } finally { //finally是非必要部分
                //关闭连接、释放资源等
            }

      throws 方式异常处理说明

        1）如果一个方法(中的语句执行时)可能生成某种异常，但是并不能确定如何
            处理这种异常，则此方法应显示地声明拋出异常，表明该方法将不对这些
            异常进行处理，而由该方法的调用者负责处理。
        2）在方法声明中用throws语句可以声明抛出异常的列表，throws后面的异
            常类型可以是方法中产生的异常类型，也可以是它的父类。

      throws使用注意事项和细节

        1)对于编译异常，程序中必须处理，比如 try-catch 或者 throws
        2)对于运行时异常，程序中如果没有处理，默认就是throws的方式处理
        3)子类重写父类的方法时，对拋出异常的规定：子类重与的方法，所拋出的异常类型要
          么和父类抛出的异常一致，要么为父类抛出的异常的类型的子类型
        4)在throws过程中，如果有方法 try-catch，就相当于处理异常，就可以不必throws

    3、自定义异常 package hsp.chapter12.exception.CustomException

        当程序中出现了某些"错误"，但该错误信息并没有在Throwable子类中描述处理
        这个时候就可以自己设计异常，用于描述该错误信息

      自定义异常的步骤
         1) 定义类：自定义异常类名(程序员自己写）继承Exception或RuntimeException
         2) 如果继承Exception，属于编译异常
         3) 如果继承RuntimeException，属于运行异常(一般来说，继承RuntimeException)

    4、throw 和 throws 的区别

                    意义                  位置              后面跟的东西

        throw   异常处理的一种方式          方法声明处        异常类型
        throw   手动生成异常对象的关键字     方法体中          异常对象

        分析 例题：ThrowException

包装类
    package hsp.chapter12.wrappertype;
    package djb.integer;

String类
    package hsp.chapter12.string;

StringBuffer StringBuilder 类

math类

Arrays类 package hsp.chapter12.arrays;
    Arrays里面包含了一系列静态方法，用于管理或操作数组(比如排序和搜索）。
        1)toString 返回数组的字符串形式
            Arrays.toString (arr)
        2)sort 排序（自然排序和定制排序）
            Integer arr[] = (1,-1,7,0,89);
        3) binarySearch 通过二分搜索法进行查找，要求必须排好序
            int index = Arrays.binarySearch(arr, 3);


System类






