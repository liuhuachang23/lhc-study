网络的相关概念

    网络通信
        1、概念：两台设备之间通过网络实现数据传输
        2、网络通信：将数据通过网络从一台设备传输到另一台设备
        3、java.net包下提供了一系列类或接口，供程序员使用，完成网络通信

    网络
        1、概念：两台或多台设备通过一定物理设备链接起来构成了网络
        2、根据网络的覆盖范围不同，对网络进行分类
            - 局域网；覆盖范围最小
            - 城域网：覆盖范围较大
            - 广域网：覆盖范围最大，万维网就是广域网的代表

    ip地址

        1. 概念：用于唯一标识网络中的每台计算机
        2. 查看ip地址：ipconfig
        3. ip地址的表示形式：点分十进制 xx.xx.xx.xx
        4. 每一个十进制数的范围：0~255

        5. ip地址的组成 = 网络地址＋主机地址，比如：192.168.16.69
        6. iPv6是互联网工程任务组设计的用于替代IPV4的下一代IP协议，其地址数量巨多
        7. 由于1Pv4最大的问题在于网络地址资源有限，严重制约了互联网的应用和发展。IPv6
           的使用，不仅能解決网络地址资源数量的问题，而且也解决了多种接入设备连入互联的障碍

        ipv4
            1、4个字节（32位）表示，一个字节范围是0~255
                如:  255:255:255:0   每组一个字节（十进制表示），共4组

            2、ipv4分类 （4个字节（32位）表示）

                分为 A、B、C、D、E 五类
                A   0.0.0.0   到 127.255.255.255     0 + 7位（网络号） + 24位（主机号）
                B   128.0.0.0 到 191.255.255.255     1 0 + 14位（网络号） + 16位（主机号）
                C   192.0.0.0 到 223.255.255.255     1 1 0 + 21位（网络号） + 8位（主机号）
                D   224.0.0.0 到 239.255.255.255     1 1 1 0 + 28位（多播组号）
                E   240.0.0.0 到 247.255.255.255     1 1 1 1 0 + 27位（带留后用）

                127.0.0.1 表示本机地址（A类）

        ipv6
            1、16个字节（128位表示）
                如:  2408:8207:1851:8670:acc6:505e:a48b:963a   每组两个字节（十六机制表示），共8组

    域名
        1. www.baidu.com
        2. 好处：为了方便记忆，解决记ip的困难
        3. 概念：将ip地址映射成域名

    端口号
        1. 概念：用于标识计算机上某个特定的网络程序
        2. 表示形式：以整数形式，范国0~65535
        3. 0~1024己经被占用，比如 ssh 22，ftp 21，smtp 25，http 80
        4. 常见的网络程序端口号：
            tomcat：8080
            mysql：3306
            oracle：1521
            sqlserver：1433

    网络通信协议
        TCP/IP (Transmission Control Protocol/Internet Protocol)
        中文译名为：传输控制协议/因特网互联协议，又叫网络通讯协议，
        这个协议是Internet最基本的协议、Internet国际互联网络的基础，
        简单地说，就是由网络层的IP协议和传输层的TCP协议组成的。


    TCP 和 UDP
        TCP协议：
            1. 使用TCP协议前，须先建立TCP连接，形成传输数据通道
            2. 传输前，采用 "三次握手" 的方式，是可靠的
            3. TCP协议进行通信的两个应用进程：客户端、服务端
            4. 在连接中可进行大数据量的传输
            5. 传输完毕，需释放已建立的连接，效率低
        UDP协议：
            1. 将数据、源、目的封装成数据包，不需要建立连接
            2. 每个数据报的大小限制在64K内
            3. 因无需连接，故是不可靠的
            4. 发送数据结束时无需释放资源(因为不是面向连接的），速度快

    INetAddress类
        常用方法 【API_】
            1）getLocalHost：获取 本机 InetAddress对象（本机名/ip地址）
            2）getByName：指定 主机名 或 域名 获取 ip地址对象（主机名/ip地址 或 域名/IP地址）
            3）getHostAddress：通过 InetAddress对象，获取主机对应的ip地址
            4）getHostName：通过 InetAddress对象，获取对应的 主机名 或 域名

    TCP字节流 和字符流 编程 【package hsp.chapter20.socket;】

    网络上传文件 【package hsp.chapter20.upload;】

    TCP网络通信编程
        netstat 指令
            1）netstat-ari 可以查看当前主机网络情况，包括端口监听情况和网络连接情况
            2）netstat -an | more 可以分页显示，

            3）要求在dos控制台下执行：

                  协议    本地地址                外部地址                状态
                  TCP    0.0.0.0:135            0.0.0.0:0              LISTENING
                  TCP    0.0.0.0:445            0.0.0.0:0              LISTENING
                  TCP    0.0.0.0:1158           0.0.0.0:0              LISTENING
                  TCP    10.41.0.213:7680       172.20.44.198:59441    TIME_WAIT
                  TCP    10.41.0.213:7680       172.20.44.198:59446    TIME_WAIT
                  TCP    10.41.0.213:53463      175.24.251.10:443      ESTABLISHED
                  TCP    10.41.0.213:53465      119.91.147.124:7826    ESTABLISHED

            4）解读一下上面的

                第一栏：协议
                    表示当前信息遵循的协议

                第二栏：本地地址 （代表 在哪里监听 的地址信息）
                    0.0.0.0 表示ip地址
                    135 表示端口

                第三栏：外部地址 （外部的连接 连到本地，表示外部地址信息）
                    0.0.0.0 表示ip地址
                    0 表示端口
                    当有一个连接 连到 本地，就会显示这个连接（外部地址）
                    当这个连接是 本地的服务器，连接到本地端口，也会显示在 外部地址

                第四栏：状态（网络的状态）
                    LISTENING 表示这个端口正在监听（还没有外部地址连接过来）
                    ESTABLISHED 表示 连接上了

            5）如果有一个外部程序（客户端）连接到该端口（本地监听的端口），就会显示一条连接信息

    TCP网络通讯不为人知的秘密

        1.当客户端连接到服务端后，实际上客户端是通过一个端口和服务器端继通讯的，这个端口由TCP/IP来分配（随机的）

    UDP网络通信编程

        基本结束
            1）类 DatagramSocket 和 DatagramPacket 实现了基于 UDP 协议网络程序
            2）UDP数据报通过数据报套接字 DatagramSocket 发送和接收，系统不保证UDP
                数据报一定能够安全送到目的地，也不能确定什么时候可以抵达
            3）DatagramPacket 对象封装了UDP数据报，在数据报中包含了发送端的IP地址和
                端口号以及接收端的IP地址和端口号
            4）UDP协议中每个数据报都给出了完整的地址信息，因此无须建立发送方和接收方的连接

        基本流程
            1）核心的两个类/对象 DatagramSocket与Datagram Packet
            2）建立发送端，接收端
            3）建立数据包
            4）调用DatagramSocket的发送、接收方法
            5）关闭DatagramSocket