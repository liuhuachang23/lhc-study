第二章	java语言基础

 1. Identifier 标识符

	* 什么是标识符？
	  - 在java源程序当中凡是程序员有权利自己命名的单词都是标识符。
	  - 标识符在Editplus编辑器当中以黑色字体高亮显示
	  - 标识符可以标识什么元素？
		*类名
		*方法名
		*变量名
		*接口名
		*常量名
		・・・・・
	* 标识符的命名规则【不按照这个规则来，编译器会报错，这是语法】
	  - 一个合法的标识符只能由 数字、字母、下划线、美元符号 组成，不能含有其他符号
	  - 不能以数字开头
	  - 严格区分大小写
	  - 关键字不能做标识符（蓝色字体）
	  - 理论上无长度限制，但最好不要太长。

	* 标识符的命规范【只是一种规范，不属于语法，不遵守规范编译器不会报错，但会挨骂】
	  - 最好见名知意
	  - 遵守驼峰命名法
	  - 类名、接口名：首字母大写，后面没个单词字母大写
	  - 变量名、方法名：首字母小写，后面每个单词首字母大写
	  - 常量名：全部大写 多个单词的话用下划线隔开

2. 关键字 【蓝色字体】

3. 字面值
	
   字面值:
	- 10、100
	- 3.14
	- "abc"
	- 'a'
	- ture、false

   *字面值就是数据
   *字面值是java源程序的组成部分之一。包括标识符和关键字他们都是Java源程序的组成部分。
   *数据在现实生活中是分门别类的，所以数据在计算机编程语言当中也是有类型的：【数据类型】

	- 10、100		属于整数字面值
	- 3.14			属于浮点型字面值
	- true、false		属于布尔型字面值
	- "abc"、"中国人"	属于字符串型字面值
	- 'A'、'人'		属于字符型字面值

	* 注意：
	  java语言当中所有的字符串型字面值必须要用双引号括起来，双引号是半角
	  java语言当中所有的字符型字面值必须要用单引号括起来，单引号是半角

4. 变量

  *什么是变量？
	*变量本质上说是内存中的一块空间，这块空间有“数据类型”、“有名字”、“有字面值”。
	*变量包含三部分：数据类型、名称、字面值【数据】
	*变量是内存中储存数据的最基本的单元。
  	
  *数据类型的作用
	*不同的数据有不同的类型，不同的数据类型底层会分配不同大小的空间
	*数据类型是指导程序在运行阶段应该分配多大的内存空间。

  *变量要求: 变量中存储的具体的“数据”必须和变量的“数据类型”一致，否则编译时报错

  *声明/定义变量的语法格式：
	数据类型 变量名;
		
		数据类型：如 整数型int
		变量名： 只要是合法的标识符就行  首字母小写 后面每个单词首字母大写。
	例如：
		int i;
		int age;
		int length;

  *变量声明之后怎么赋值
	语法格式：
		变量名 = 字面值;

	要求：字面值的数据类型必须和变量的数据类型一致。

  *声明和赋值可以放到一起完成
	int i =10；

  *变量赋值之后，可以重新赋值，变量的值可变化

  *有了变量的概念之后，内存空间得到了重复使用

  *通常访问一个变量包括两种访问形式
	- 读取变量中保存的具体数据 get/获取
	- 修改变量中保存的具体数据 set/设置

  *变量在一行上可以声明多个
	int a,b,c;

  *变量必须先声明，再赋值，才能访问。
	声明 int i；程序到这里，内存空间并没有开辟出来，变量i并没有变化。所以赋值之前是无法访问的
	赋值 i =100；给i变量赋值，i变量在这里完成初始化，内存开辟

  *关于java语言当中的变量：
	- 在方法体当中的java代码，是遵循 自上而下 的顺序依次执行，逐行执行。（第二行的代码必须完整结束后，第三行才能执行）
	- 在同一个“作用域”当中，变量名不能重名，但是变量可以重新赋值。
	- 在不同的作用域当中,变量名可以相同的.

  *变量的作用域
		
	- 什么是作用域？
	  变量的作用域，其实描述的就是变量的有效范围。
	  在什么范围之内是可以被访问的，只要出了这个范围该变量就无法访问了。
	
	- 变量的作用域只要记住一句话就行
	  出了大括号就不认识了 （变量声明的位置很重要 可以决定作用域的范围）

  *关于变量的分类:
	
	- 根据变量声明的位置来分类:
		*局部变量
		   - 在方法体当中声明的变量叫做 局部变量
		*成员变量
		   - 在方法体外 (但要在类体之内) 声明的变量叫 成员变量 
	- 在不同的作用域当中,变量名可以相同的.
		不同的作用域 当有相同的变量名时 遵循就近原则访问

5. 数据类型

  *关于java中的数据类型:
	
	数据类型的作用是什么?
	  - 指导JVM在运行程序的时候给该数据分配多大的内存空间.
	java在的数据类型包括两种:
	  - 基本数据类型
	  - 引用数据类型【后面讲】
		*类
		*接口
		*数组
		・・・・
	
	基本数据类型：
	  基本数据类型包括四大类八小种：
		第一类：整数型
			byte，short，int，long
		第二类：浮点类
			float，double
		第三类：布尔型
			boolean
		第四类：字符型
			char
	  字符串"abc"不属于基本数据类型，属于"引用数据类型"
	
	八种基本数据类型各自占用空间大小是多少？
	  
	  基本数据类型			占用空间大小 【单位：字节】
	 ----------------------------------------------------------
	  byte					1
	  short					2
	  int					4
	  long					8
	  float					4
	  double				8	
	  boolean				1	
	  char					2
	
	计算机在任何情况下都只能识别二进制。
	 【现代的计算机底层采用交流点的方式，接通和断开两种状态，计算机只能识别0或1】
	
	字节(byte)；
		1 Byte = 8 bit 【一个字节 = 8个比特位】1个比特位表示一个二进制位：1/0
		1 KB = 1024 Byte
		1 MB = 1024 KB
		1 GB = 1024 MB
		1 TB = 1024 GB
	
		1 TB = 1024 * 1024 * 1024 * 1024 * 8 bit
	
	整数型当中的byte类型，占用1个字节，所以byte类型的数据占用8个比特位。那么byte类型的取值范围是什么?
	
			* 关于Java中的数字类型，数字都是有正负之分的，所以在数字的二进制当中有一个二进制位被称为 "符号位" 在所有二进制的最左边，0代表正数 1代表负数。
			* byte类型最大值：
				01111111 【10000000减去1的结果】
				2的7次方减1 结果是127
			* byte类型的最小值：-128 【和 原名，补码，反码 有关】
	
			* byte的取值范围：[-128 ~ 127]
	
			* byte类型可以表示256个不同的数字【256个不同的二进制】
	
	计算机只认识二进制，那么计算机是怎么表示现实世界当中的文字的呢？
	
		* 八张基本数据类型当中，前面7种数据类型计算机在表示的时候比较简单，因为底层都是数字，十进制的数字和二进制之间存在一种固定的转换规则。
		* 但是char类型 表示的是现实世界中的文字，文字和计算机二进制之间'默认'情况下是不存在如何转换关系的。
		* 为了让计算机可以表示现实世界当中的文字，我们需要进行人为的干涉，需要人负责提前制定好"文字"和"二进制"之间的对照关系，这种对照转化关系被称为：字符编码。
		* 计算机最初只支持英文，最先出现的字符编码是：ASCII码
			'a' --> 97 【01100001】
			'A' --> 65
			'0' --> 48
	
			'a' --(按照ASCII解码)--> 01100001
			01100001 --(安装ASCII编码)--> 'a'
			编码和解码采用同一套字典/对照表，不会出现乱码，反之会出现乱码。
	
		* 随着计算机的发展，后来出现了一种编码方式，是国际标准组织ISO制定的，
		  这种编码方式支持西欧语言，向上兼容ASCII码，仍然不支持中文。这种编码方式是：IOS-8859-1，又被称为latin-1
	
		* 随着计算机向亚洲发展，计算机开始支持中文，日文，韩文，
		    支持 简体中文的编码方式：
				GB2312/GBK/GB18030 【容量从小到大】
		    支持繁体中文：大五码 <big5>
		
		* 后来出现了一种编码方式统一了全球所有文字，容量较大，这种编码方式叫做：unicode编码
		  unicode编码方式有多种具体的实现：
		    - UTF-8
		    - UTF-16
		    - UTF-32
		    .....
	
		 * java语言采用的是哪一种编码方式呢？
		   - java语言源代码采用的是unicode编码方式，所以"标识符"可以写中文。
		
		* 现实实际开发中，UTF-8 编码方式较多。【统一编码方式】
	
		* 八种基本数据类型的取值范围:
	
			 类型			取值范围
		       ---------------------------------------------------
			 byte			[-128 ~ 127]
			 short			[-32768 ~ 32767]
			 int			[-2147483648 ~ 2147483647]
			 long			
			 float
			 double
			 boolean		[true,false]
			 char			[0 ~ 65535]
	
	            注意: short和char所表示的种类总数是一样的,只不过char可以表示更大的正整数.
	            因为char没有负.
		    
		 * 八种基本数据类型的默认值
		   
		   成员变量没有手动赋值系统会默认赋值，局部变量不会。
		   
		   数据类型			默认值
		   --------------------------------------------------
		   byte，short，int，long	0
		   float，double		0.0
		   boolean			false 【在C语言中true是1，false是0】
		   char				\u0000
		 
		  八种基本数据类型的默认值但是向0看齐。